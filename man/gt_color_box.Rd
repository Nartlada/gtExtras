% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gt_color_box.R
\name{gt_color_box}
\alias{gt_color_box}
\title{Add a small color box relative to the cell value.}
\usage{
gt_color_box(
  gt_object,
  columns,
  palette = NULL,
  domain = NULL,
  use_paletteer = FALSE,
  width = 70
)
}
\arguments{
\item{gt_object}{An existing gt table object of class \code{gt_tbl}}

\item{columns}{he columns wherein changes to cell data colors should occur.}

\item{palette}{The colours or colour function that values will be mapped to. Can be a character vector (eg \code{c("white", "red")} or hex colors) or if \code{use_paletteer = TRUE}, a named palette from the \code{{paletteer}} package.}

\item{domain}{The possible values that can be mapped. This should be a simple numeric range (e.g. \code{c(0, 100)})}

\item{use_paletteer}{Should the palette be passed as a "package::palette_name" to \code{paletteer} or should the palette be treated as a raw character string of colors. Defaults to \code{TRUE}. Note that if \code{FALSE}, that the "n", "direction", and "type" arguments are ignored, as they are passed only to \code{paletter::paletteer_d()}.}

\item{width}{The width of the entire coloring area in pixels.}
}
\value{

}
\description{
Add a small color box relative to the cell value.
}
\section{Figures}{

\if{html}{\figure{color_box.png}{options: width=30\%}}
}

\section{Function ID}{

2-4
}

\examples{
library(gt)
test_data <- dplyr::tibble(x = letters[1:10],
                    y = seq(100, 10, by = -10),
                    z = seq(10, 100, by = 10))
color_box_tab <- test_data \%>\%
  gt() \%>\%
  gt_color_box(columns = y, domain = 0:100,
               palette = "ggsci::blue_material", use_paletteer = TRUE) \%>\%
  gt_color_box(columns = z, domain = 0:100,
               palette = c("purple", "lightgrey", "green"))
}
\seealso{
Other Colors: 
\code{\link{gt_color_rows}()},
\code{\link{gt_hulk_col_numeric}()}
}
\concept{Colors}
